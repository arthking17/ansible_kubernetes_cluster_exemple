---
  - name: Make sure that the br_netfilter module is loaded
    shell: |
      cat <<EOF | tee /etc/modules-load.d/k8s.conf
      br_netfilter
      EOF
    become: yes
    args:
      executable: /bin/bash

  - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
    shell: |
      cat <<EOF | tee /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      EOF
    become: yes
    args:
      executable: /bin/bash

  - name: modify kernel parameters at runtime
    command: sysctl --system
    become: yes

  - name: Uninstall Older versions of Docker were called docker, docker.io, or docker-engine
    command: ls #apt-get remove docker docker-engine docker.io containerd runc
    become: yes
    ignore_errors: true

  - name: download package information from all configured sources
    command: apt-get update
    become: yes
    ignore_errors: true

  - name: install packages needed to use the Kubernetes apt repository
    command: |
      sudo apt-get install -y \
      ca-certificates \
      curl \
      gnupg \
      lsb-release
    ignore_errors: true

  - name: remove old docker keys
    command: rm /usr/share/keyrings/docker-archive-keyring.gpg
    ignore_errors: true

  - name: Add Docker's official GPG key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

  - name: set up the docker stable repository
    shell: |
      echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    args:
      executable: /bin/bash

  - name: Update apt package index
    command: sudo apt-get update
    ignore_errors: true

  - name: define name later
    command:  apt-get install -y docker-ce docker-ce-cli containerd.io

  - name: Update apt package index
    command: sudo apt-get update
    ignore_errors: true

  - name: install packages needed to use the Kubernetes apt repository
    command: sudo apt-get install -y apt-transport-https ca-certificates curl

  - name: Download the Google Cloud public signing key
    shell: sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

  - name: Add the Kubernetes apt repository
    shell: echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

  - name: download package information from all configured sources
    command: sudo apt-get update
    ignore_errors: true

  - name: install kubelet, kubeadm and kubectl
    command: sudo apt-get install -y kubelet kubeadm kubectl

  - name: pin their version (kubelet, kubeadm and kubectl)
    command: sudo apt-mark hold kubelet kubeadm kubectl

  - name: change docker cgroup driver to systemd 
    shell: |
      cat <<EOF | sudo tee /etc/docker/daemon.json
      {
        "exec-opts": ["native.cgroupdriver=systemd"]
      }
      EOF
    args:
      executable: /bin/bash

  - name: updating the systemd configuration
    command: systemctl daemon-reload

  - name: restart docker service
    command: systemctl restart docker

  - name: disable swapp memory
    command: sudo swapoff -a

  - name: reset kubeadm (make sure to reset kube conf in all host if a config already exist to avoid issue config already exist when trying to init master node or join a cluster)
    command: kubeadm reset -f